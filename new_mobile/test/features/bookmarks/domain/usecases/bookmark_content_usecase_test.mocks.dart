// Mocks generated by Mockito 5.4.4 from annotations
// in skill_bridge_mobile/test/features/bookmarks/domain/usecases/bookmark_content_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:prep_genie/core/error/failure.dart' as _i5;
import 'package:prep_genie/features/bookmarks/domain/entities/entities.dart'
    as _i6;
import 'package:prep_genie/features/bookmarks/domain/repositories/bookmark_repositoires.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BookmarkRepositories].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookmarkRepositories extends _i1.Mock
    implements _i3.BookmarkRepositories {
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Bookmarks>> getUserBookmarks() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserBookmarks,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Bookmarks>>.value(
            _FakeEither_0<_i5.Failure, _i6.Bookmarks>(
          this,
          Invocation.method(
            #getUserBookmarks,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Bookmarks>>.value(
                _FakeEither_0<_i5.Failure, _i6.Bookmarks>(
          this,
          Invocation.method(
            #getUserBookmarks,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Bookmarks>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> bookmarkContent(
          String? contentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #bookmarkContent,
          [contentId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #bookmarkContent,
            [contentId],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
                _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #bookmarkContent,
            [contentId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> removeBookmarkedContent(
          String? contentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeBookmarkedContent,
          [contentId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #removeBookmarkedContent,
            [contentId],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, void>>.value(
                _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #removeBookmarkedContent,
            [contentId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> bookmarkQuestion(
          String? qeustionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #bookmarkQuestion,
          [qeustionId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #bookmarkQuestion,
            [qeustionId],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, void>>.value(
                _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #bookmarkQuestion,
            [qeustionId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> removeQuestionBookmark(
          String? questionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeQuestionBookmark,
          [questionId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #removeQuestionBookmark,
            [questionId],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, void>>.value(
                _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #removeQuestionBookmark,
            [questionId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}

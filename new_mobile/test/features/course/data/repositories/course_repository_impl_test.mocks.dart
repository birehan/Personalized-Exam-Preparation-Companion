// Mocks generated by Mockito 5.4.4 from annotations
// in skill_bridge_mobile/test/features/course/data/repositories/course_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:prep_genie/core/core.dart' as _i5;
import 'package:prep_genie/features/course/data/datasources/courses_local_data_sources.dart'
    as _i6;
import 'package:prep_genie/features/features.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserCourseAnalysis_0 extends _i1.SmartFake
    implements _i2.UserCourseAnalysis {
  _FakeUserCourseAnalysis_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDepartmentCourse_1 extends _i1.SmartFake
    implements _i2.DepartmentCourse {
  _FakeDepartmentCourse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChatResponseModel_2 extends _i1.SmartFake
    implements _i2.ChatResponseModel {
  _FakeChatResponseModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_3 extends _i1.SmartFake implements _i3.IOSOptions {
  _FakeIOSOptions_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_4 extends _i1.SmartFake
    implements _i3.AndroidOptions {
  _FakeAndroidOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_5 extends _i1.SmartFake implements _i3.LinuxOptions {
  _FakeLinuxOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_6 extends _i1.SmartFake
    implements _i3.WindowsOptions {
  _FakeWindowsOptions_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_7 extends _i1.SmartFake implements _i3.WebOptions {
  _FakeWebOptions_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_8 extends _i1.SmartFake implements _i3.MacOsOptions {
  _FakeMacOsOptions_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CourseRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCourseRemoteDataSource extends _i1.Mock
    implements _i2.CourseRemoteDataSource {
  @override
  _i4.Future<List<_i2.UserCourse>> getUserCourses() => (super.noSuchMethod(
        Invocation.method(
          #getUserCourses,
          [],
        ),
        returnValue: _i4.Future<List<_i2.UserCourse>>.value(<_i2.UserCourse>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.UserCourse>>.value(<_i2.UserCourse>[]),
      ) as _i4.Future<List<_i2.UserCourse>>);

  @override
  _i4.Future<_i2.UserCourseAnalysis> getCourseById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCourseById,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.UserCourseAnalysis>.value(_FakeUserCourseAnalysis_0(
          this,
          Invocation.method(
            #getCourseById,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.UserCourseAnalysis>.value(_FakeUserCourseAnalysis_0(
          this,
          Invocation.method(
            #getCourseById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.UserCourseAnalysis>);

  @override
  _i4.Future<List<_i2.Course>> getCoursesByDepartmentId(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoursesByDepartmentId,
          [id],
        ),
        returnValue: _i4.Future<List<_i2.Course>>.value(<_i2.Course>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.Course>>.value(<_i2.Course>[]),
      ) as _i4.Future<List<_i2.Course>>);

  @override
  _i4.Future<bool> registercourse(String? courseId) => (super.noSuchMethod(
        Invocation.method(
          #registercourse,
          [courseId],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> registerSubChapter(
    String? subChapterId,
    String? chapterId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerSubChapter,
          [
            subChapterId,
            chapterId,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i2.DepartmentCourse> getDepartmentCourse(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDepartmentCourse,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.DepartmentCourse>.value(_FakeDepartmentCourse_1(
          this,
          Invocation.method(
            #getDepartmentCourse,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.DepartmentCourse>.value(_FakeDepartmentCourse_1(
          this,
          Invocation.method(
            #getDepartmentCourse,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.DepartmentCourse>);

  @override
  _i4.Future<_i2.ChatResponseModel> chat(
    bool? isContest,
    String? contentId,
    String? userQuestion,
    List<_i2.ChatHistory>? chatHistory,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #chat,
          [
            isContest,
            contentId,
            userQuestion,
            chatHistory,
          ],
        ),
        returnValue:
            _i4.Future<_i2.ChatResponseModel>.value(_FakeChatResponseModel_2(
          this,
          Invocation.method(
            #chat,
            [
              isContest,
              contentId,
              userQuestion,
              chatHistory,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.ChatResponseModel>.value(_FakeChatResponseModel_2(
          this,
          Invocation.method(
            #chat,
            [
              isContest,
              contentId,
              userQuestion,
              chatHistory,
            ],
          ),
        )),
      ) as _i4.Future<_i2.ChatResponseModel>);

  @override
  _i4.Future<List<_i2.ChapterVideoModel>> fetchCourseVideos(String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCourseVideos,
          [courseId],
        ),
        returnValue: _i4.Future<List<_i2.ChapterVideoModel>>.value(
            <_i2.ChapterVideoModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.ChapterVideoModel>>.value(
                <_i2.ChapterVideoModel>[]),
      ) as _i4.Future<List<_i2.ChapterVideoModel>>);

  @override
  _i4.Future<bool> updateVideStatus(
    String? videoId,
    bool? isCompleted,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateVideStatus,
          [
            videoId,
            isCompleted,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> downloadCourseById(String? courseId) => (super.noSuchMethod(
        Invocation.method(
          #downloadCourseById,
          [courseId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i3.FlutterSecureStorage {
  @override
  _i3.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_3(
          this,
          Invocation.getter(#iOptions),
        ),
        returnValueForMissingStub: _FakeIOSOptions_3(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i3.IOSOptions);

  @override
  _i3.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_4(
          this,
          Invocation.getter(#aOptions),
        ),
        returnValueForMissingStub: _FakeAndroidOptions_4(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i3.AndroidOptions);

  @override
  _i3.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_5(
          this,
          Invocation.getter(#lOptions),
        ),
        returnValueForMissingStub: _FakeLinuxOptions_5(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i3.LinuxOptions);

  @override
  _i3.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_6(
          this,
          Invocation.getter(#wOptions),
        ),
        returnValueForMissingStub: _FakeWindowsOptions_6(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i3.WindowsOptions);

  @override
  _i3.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_7(
          this,
          Invocation.getter(#webOptions),
        ),
        returnValueForMissingStub: _FakeWebOptions_7(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i3.WebOptions);

  @override
  _i3.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_8(
          this,
          Invocation.getter(#mOptions),
        ),
        returnValueForMissingStub: _FakeMacOsOptions_8(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i3.MacOsOptions);

  @override
  _i4.Future<void> write({
    required String? key,
    required String? value,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?> read({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i4.Future<String?>.value(),
        returnValueForMissingStub: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<bool> containsKey({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> delete({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<String, String>> readAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i4.Future<Map<String, String>>.value(<String, String>{}),
        returnValueForMissingStub:
            _i4.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i4.Future<Map<String, String>>);

  @override
  _i4.Future<void> deleteAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [CoursesLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoursesLocalDatasource extends _i1.Mock
    implements _i6.CoursesLocalDatasource {
  @override
  _i4.Future<List<_i2.UserCourse>?> getCachedUserCourses() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedUserCourses,
          [],
        ),
        returnValue: _i4.Future<List<_i2.UserCourse>?>.value(),
        returnValueForMissingStub: _i4.Future<List<_i2.UserCourse>?>.value(),
      ) as _i4.Future<List<_i2.UserCourse>?>);

  @override
  _i4.Future<void> saveUserCourses(dynamic userCourses) => (super.noSuchMethod(
        Invocation.method(
          #saveUserCourses,
          [userCourses],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.UserCourseAnalysis?> getCachedCourseById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedCourseById,
          [id],
        ),
        returnValue: _i4.Future<_i2.UserCourseAnalysis?>.value(),
        returnValueForMissingStub: _i4.Future<_i2.UserCourseAnalysis?>.value(),
      ) as _i4.Future<_i2.UserCourseAnalysis?>);

  @override
  _i4.Future<void> saveCourseById({
    required String? id,
    required dynamic userCourseAnalysisJson,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCourseById,
          [],
          {
            #id: id,
            #userCourseAnalysisJson: userCourseAnalysisJson,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> cacheCourseVideos(
    String? courseId,
    dynamic courseVideos,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheCourseVideos,
          [
            courseId,
            courseVideos,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i2.ChapterVideoModel>?> getCachedCourseVideos(
          String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedCourseVideos,
          [courseId],
        ),
        returnValue: _i4.Future<List<_i2.ChapterVideoModel>?>.value(),
        returnValueForMissingStub:
            _i4.Future<List<_i2.ChapterVideoModel>?>.value(),
      ) as _i4.Future<List<_i2.ChapterVideoModel>?>);

  @override
  _i4.Future<void> cacheDownloadedCourses(dynamic course) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheDownloadedCourses,
          [course],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i2.CourseModel>> fetchDownloadedCourses() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchDownloadedCourses,
          [],
        ),
        returnValue:
            _i4.Future<List<_i2.CourseModel>>.value(<_i2.CourseModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.CourseModel>>.value(<_i2.CourseModel>[]),
      ) as _i4.Future<List<_i2.CourseModel>>);

  @override
  _i4.Future<void> markCourseAsDownloaded(String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markCourseAsDownloaded,
          [courseId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isCourseDownloaded(String? courseId) => (super.noSuchMethod(
        Invocation.method(
          #isCourseDownloaded,
          [courseId],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

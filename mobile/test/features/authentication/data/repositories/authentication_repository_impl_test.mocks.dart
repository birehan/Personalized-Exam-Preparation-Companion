// Mocks generated by Mockito 5.4.4 from annotations
// in skill_bridge_mobile/test/features/authentication/data/repositories/authentication_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:prepgenie/core/core.dart' as _i5;
import 'package:prepgenie/features/authentication/authentication.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserCredentialModel_0 extends _i1.SmartFake
    implements _i2.UserCredentialModel {
  _FakeUserCredentialModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_1 extends _i1.SmartFake implements _i3.IOSOptions {
  _FakeIOSOptions_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_2 extends _i1.SmartFake
    implements _i3.AndroidOptions {
  _FakeAndroidOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_3 extends _i1.SmartFake implements _i3.LinuxOptions {
  _FakeLinuxOptions_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_4 extends _i1.SmartFake
    implements _i3.WindowsOptions {
  _FakeWindowsOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_5 extends _i1.SmartFake implements _i3.WebOptions {
  _FakeWebOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_6 extends _i1.SmartFake implements _i3.MacOsOptions {
  _FakeMacOsOptions_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthenticationRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRemoteDatasource extends _i1.Mock
    implements _i2.AuthenticationRemoteDatasource {
  @override
  _i4.Future<_i2.UserCredentialModel> signup({
    required String? emailOrPhoneNumber,
    required String? password,
    required String? firstName,
    required String? lastName,
    required String? otp,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [],
          {
            #emailOrPhoneNumber: emailOrPhoneNumber,
            #password: password,
            #firstName: firstName,
            #lastName: lastName,
            #otp: otp,
          },
        ),
        returnValue: _i4.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #signup,
            [],
            {
              #emailOrPhoneNumber: emailOrPhoneNumber,
              #password: password,
              #firstName: firstName,
              #lastName: lastName,
              #otp: otp,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #signup,
            [],
            {
              #emailOrPhoneNumber: emailOrPhoneNumber,
              #password: password,
              #firstName: firstName,
              #lastName: lastName,
              #otp: otp,
            },
          ),
        )),
      ) as _i4.Future<_i2.UserCredentialModel>);

  @override
  _i4.Future<_i2.UserCredentialModel> login({
    required String? emailOrPhoneNumber,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #emailOrPhoneNumber: emailOrPhoneNumber,
            #password: password,
          },
        ),
        returnValue: _i4.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #login,
            [],
            {
              #emailOrPhoneNumber: emailOrPhoneNumber,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #login,
            [],
            {
              #emailOrPhoneNumber: emailOrPhoneNumber,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i2.UserCredentialModel>);

  @override
  _i4.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> forgetPassword({
    required String? emailOrPhoneNumber,
    required String? otp,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgetPassword,
          [],
          {
            #emailOrPhoneNumber: emailOrPhoneNumber,
            #otp: otp,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> changePassword({
    required String? emailOrPhoneNumber,
    required String? newPassword,
    required String? confirmPassword,
    required String? otp,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [],
          {
            #emailOrPhoneNumber: emailOrPhoneNumber,
            #newPassword: newPassword,
            #confirmPassword: confirmPassword,
            #otp: otp,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> sendOtpVerification(String? emailOrPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendOtpVerification,
          [emailOrPhoneNumber],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resendOtpVerification(String? emailOrPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #resendOtpVerification,
          [emailOrPhoneNumber],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.UserCredentialModel> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i4.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
      ) as _i4.Future<_i2.UserCredentialModel>);

  @override
  _i4.Future<void> storeDeviceToken() => (super.noSuchMethod(
        Invocation.method(
          #storeDeviceToken,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteDeviceToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteDeviceToken,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i3.FlutterSecureStorage {
  @override
  _i3.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_1(
          this,
          Invocation.getter(#iOptions),
        ),
        returnValueForMissingStub: _FakeIOSOptions_1(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i3.IOSOptions);

  @override
  _i3.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_2(
          this,
          Invocation.getter(#aOptions),
        ),
        returnValueForMissingStub: _FakeAndroidOptions_2(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i3.AndroidOptions);

  @override
  _i3.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_3(
          this,
          Invocation.getter(#lOptions),
        ),
        returnValueForMissingStub: _FakeLinuxOptions_3(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i3.LinuxOptions);

  @override
  _i3.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_4(
          this,
          Invocation.getter(#wOptions),
        ),
        returnValueForMissingStub: _FakeWindowsOptions_4(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i3.WindowsOptions);

  @override
  _i3.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_5(
          this,
          Invocation.getter(#webOptions),
        ),
        returnValueForMissingStub: _FakeWebOptions_5(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i3.WebOptions);

  @override
  _i3.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_6(
          this,
          Invocation.getter(#mOptions),
        ),
        returnValueForMissingStub: _FakeMacOsOptions_6(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i3.MacOsOptions);

  @override
  _i4.Future<void> write({
    required String? key,
    required String? value,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?> read({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i4.Future<String?>.value(),
        returnValueForMissingStub: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<bool> containsKey({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> delete({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<String, String>> readAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i4.Future<Map<String, String>>.value(<String, String>{}),
        returnValueForMissingStub:
            _i4.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i4.Future<Map<String, String>>);

  @override
  _i4.Future<void> deleteAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [AuthenticationLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationLocalDatasource extends _i1.Mock
    implements _i2.AuthenticationLocalDatasource {
  @override
  _i4.Future<void> cacheAuthenticationCredential(
          {required _i2.UserCredentialModel? userCredentialModel}) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheAuthenticationCredential,
          [],
          {#userCredentialModel: userCredentialModel},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.UserCredentialModel> getUserCredential() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserCredential,
          [],
        ),
        returnValue: _i4.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #getUserCredential,
            [],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #getUserCredential,
            [],
          ),
        )),
      ) as _i4.Future<_i2.UserCredentialModel>);

  @override
  _i4.Future<void> clearAuthenticationCredential() => (super.noSuchMethod(
        Invocation.method(
          #clearAuthenticationCredential,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> initializeApp() => (super.noSuchMethod(
        Invocation.method(
          #initializeApp,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> getAppInitialization() => (super.noSuchMethod(
        Invocation.method(
          #getAppInitialization,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> updateUserCredntial(
          {required _i2.UserCredentialModel?
              updatedUserCredntialInformation}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserCredntial,
          [],
          {#updatedUserCredntialInformation: updatedUserCredntialInformation},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

// Mocks generated by Mockito 5.4.4 from annotations
// in skill_bridge_mobile/test/features/profile/domain/get_profile_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:prepgenie/core/error/failure.dart' as _i5;
import 'package:prepgenie/features/features.dart' as _i3;
import 'package:prepgenie/features/profile/domain/entities/change_password_entity.dart'
    as _i8;
import 'package:prepgenie/features/profile/domain/entities/change_username_entity.dart'
    as _i7;
import 'package:prepgenie/features/profile/domain/entities/consistency_entity.dart'
    as _i10;
import 'package:prepgenie/features/profile/domain/entities/profile_update_entity.dart'
    as _i9;
import 'package:prepgenie/features/profile/domain/entities/school_info_enitity.dart'
    as _i11;
import 'package:prepgenie/features/profile/domain/entities/user_profile_entity_get.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileRepositories].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRepositories extends _i1.Mock
    implements _i3.ProfileRepositories {
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserProfile>> getUserProfile({
    required bool? isRefreshed,
    String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
          {
            #isRefreshed: isRefreshed,
            #userId: userId,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.UserProfile>>.value(
            _FakeEither_0<_i5.Failure, _i6.UserProfile>(
          this,
          Invocation.method(
            #getUserProfile,
            [],
            {
              #isRefreshed: isRefreshed,
              #userId: userId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i6.UserProfile>>.value(
                _FakeEither_0<_i5.Failure, _i6.UserProfile>(
          this,
          Invocation.method(
            #getUserProfile,
            [],
            {
              #isRefreshed: isRefreshed,
              #userId: userId,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.UserProfile>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i7.ChangeUsernameEntity>> postChangeUsername(
    String? firstname,
    String? lastname,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postChangeUsername,
          [
            firstname,
            lastname,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.ChangeUsernameEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.ChangeUsernameEntity>(
          this,
          Invocation.method(
            #postChangeUsername,
            [
              firstname,
              lastname,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i7.ChangeUsernameEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.ChangeUsernameEntity>(
          this,
          Invocation.method(
            #postChangeUsername,
            [
              firstname,
              lastname,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.ChangeUsernameEntity>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i8.ChangePasswordEntity>> postChangePassword(
    String? oldPassword,
    String? newPassword,
    String? repeatPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postChangePassword,
          [
            oldPassword,
            newPassword,
            repeatPassword,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i8.ChangePasswordEntity>>.value(
                _FakeEither_0<_i5.Failure, _i8.ChangePasswordEntity>(
          this,
          Invocation.method(
            #postChangePassword,
            [
              oldPassword,
              newPassword,
              repeatPassword,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i8.ChangePasswordEntity>>.value(
                _FakeEither_0<_i5.Failure, _i8.ChangePasswordEntity>(
          this,
          Invocation.method(
            #postChangePassword,
            [
              oldPassword,
              newPassword,
              repeatPassword,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.ChangePasswordEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
                _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> updateProfile(
          _i9.ProfileUpdateEntity? updateEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [updateEntity],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #updateProfile,
            [updateEntity],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, void>>.value(
                _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #updateProfile,
            [updateEntity],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i3.Leaderboard>> getTopUsers(
          {required int? page}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopUsers,
          [],
          {#page: page},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i3.Leaderboard>>.value(
            _FakeEither_0<_i5.Failure, _i3.Leaderboard>(
          this,
          Invocation.method(
            #getTopUsers,
            [],
            {#page: page},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i3.Leaderboard>>.value(
                _FakeEither_0<_i5.Failure, _i3.Leaderboard>(
          this,
          Invocation.method(
            #getTopUsers,
            [],
            {#page: page},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i3.Leaderboard>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i10.ConsistencyEntity>>>
      getUserConsistencyData({
    required String? year,
    String? userId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getUserConsistencyData,
              [],
              {
                #year: year,
                #userId: userId,
              },
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.Failure, List<_i10.ConsistencyEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i10.ConsistencyEntity>>(
              this,
              Invocation.method(
                #getUserConsistencyData,
                [],
                {
                  #year: year,
                  #userId: userId,
                },
              ),
            )),
            returnValueForMissingStub: _i4.Future<
                    _i2
                    .Either<_i5.Failure, List<_i10.ConsistencyEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i10.ConsistencyEntity>>(
              this,
              Invocation.method(
                #getUserConsistencyData,
                [],
                {
                  #year: year,
                  #userId: userId,
                },
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, List<_i10.ConsistencyEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i11.SchoolDepartmentInfo>>
      getSchoolInfo() => (super.noSuchMethod(
            Invocation.method(
              #getSchoolInfo,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, _i11.SchoolDepartmentInfo>>.value(
                _FakeEither_0<_i5.Failure, _i11.SchoolDepartmentInfo>(
              this,
              Invocation.method(
                #getSchoolInfo,
                [],
              ),
            )),
            returnValueForMissingStub: _i4.Future<
                    _i2.Either<_i5.Failure, _i11.SchoolDepartmentInfo>>.value(
                _FakeEither_0<_i5.Failure, _i11.SchoolDepartmentInfo>(
              this,
              Invocation.method(
                #getSchoolInfo,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i11.SchoolDepartmentInfo>>);
}

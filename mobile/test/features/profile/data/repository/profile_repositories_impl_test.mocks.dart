// Mocks generated by Mockito 5.4.4 from annotations
// in skill_bridge_mobile/test/features/profile/data/repository/profile_repositories_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:skill_bridge_mobile/core/network/network.dart' as _i8;
import 'package:skill_bridge_mobile/core/utils/hive_boxes.dart' as _i9;
import 'package:skill_bridge_mobile/features/features.dart' as _i2;
import 'package:skill_bridge_mobile/features/profile/data/models/school_model.dart'
    as _i4;
import 'package:skill_bridge_mobile/features/profile/data/models/user_profile_model.dart'
    as _i3;
import 'package:skill_bridge_mobile/features/profile/domain/entities/consistency_entity.dart'
    as _i7;
import 'package:skill_bridge_mobile/features/profile/domain/entities/profile_update_entity.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserCredentialModel_0 extends _i1.SmartFake
    implements _i2.UserCredentialModel {
  _FakeUserCredentialModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChangePasswordModel_1 extends _i1.SmartFake
    implements _i2.ChangePasswordModel {
  _FakeChangePasswordModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserProfileModel_2 extends _i1.SmartFake
    implements _i3.UserProfileModel {
  _FakeUserProfileModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLeaderboardModel_3 extends _i1.SmartFake
    implements _i2.LeaderboardModel {
  _FakeLeaderboardModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSchoolDepartmentModel_4 extends _i1.SmartFake
    implements _i4.SchoolDepartmentModel {
  _FakeSchoolDepartmentModel_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRemoteDataSource extends _i1.Mock
    implements _i2.ProfileRemoteDataSource {
  @override
  _i5.Future<_i2.UserCredentialModel> postChangeUsername(
    String? firstname,
    String? lastname,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postChangeUsername,
          [
            firstname,
            lastname,
          ],
        ),
        returnValue: _i5.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #postChangeUsername,
            [
              firstname,
              lastname,
            ],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #postChangeUsername,
            [
              firstname,
              lastname,
            ],
          ),
        )),
      ) as _i5.Future<_i2.UserCredentialModel>);

  @override
  _i5.Future<_i2.ChangePasswordModel> postChangePassword(
    String? oldPassword,
    String? newPassword,
    String? repeatPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postChangePassword,
          [
            oldPassword,
            newPassword,
            repeatPassword,
          ],
        ),
        returnValue: _i5.Future<_i2.ChangePasswordModel>.value(
            _FakeChangePasswordModel_1(
          this,
          Invocation.method(
            #postChangePassword,
            [
              oldPassword,
              newPassword,
              repeatPassword,
            ],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i2.ChangePasswordModel>.value(
            _FakeChangePasswordModel_1(
          this,
          Invocation.method(
            #postChangePassword,
            [
              oldPassword,
              newPassword,
              repeatPassword,
            ],
          ),
        )),
      ) as _i5.Future<_i2.ChangePasswordModel>);

  @override
  _i5.Future<_i3.UserProfileModel> getUserProfile({String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
          {#userId: userId},
        ),
        returnValue:
            _i5.Future<_i3.UserProfileModel>.value(_FakeUserProfileModel_2(
          this,
          Invocation.method(
            #getUserProfile,
            [],
            {#userId: userId},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.UserProfileModel>.value(_FakeUserProfileModel_2(
          this,
          Invocation.method(
            #getUserProfile,
            [],
            {#userId: userId},
          ),
        )),
      ) as _i5.Future<_i3.UserProfileModel>);

  @override
  _i5.Future<bool> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> clearAuthenticationCredential() => (super.noSuchMethod(
        Invocation.method(
          #clearAuthenticationCredential,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.UserCredentialModel> updateProfile(
          _i6.ProfileUpdateEntity? updateEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [updateEntity],
        ),
        returnValue: _i5.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #updateProfile,
            [updateEntity],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #updateProfile,
            [updateEntity],
          ),
        )),
      ) as _i5.Future<_i2.UserCredentialModel>);

  @override
  _i5.Future<_i2.LeaderboardModel> getTopUsers({required int? page}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopUsers,
          [],
          {#page: page},
        ),
        returnValue:
            _i5.Future<_i2.LeaderboardModel>.value(_FakeLeaderboardModel_3(
          this,
          Invocation.method(
            #getTopUsers,
            [],
            {#page: page},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.LeaderboardModel>.value(_FakeLeaderboardModel_3(
          this,
          Invocation.method(
            #getTopUsers,
            [],
            {#page: page},
          ),
        )),
      ) as _i5.Future<_i2.LeaderboardModel>);

  @override
  _i5.Future<List<_i7.ConsistencyEntity>> getConsistencyData({
    required String? year,
    String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConsistencyData,
          [],
          {
            #year: year,
            #userId: userId,
          },
        ),
        returnValue: _i5.Future<List<_i7.ConsistencyEntity>>.value(
            <_i7.ConsistencyEntity>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i7.ConsistencyEntity>>.value(
                <_i7.ConsistencyEntity>[]),
      ) as _i5.Future<List<_i7.ConsistencyEntity>>);

  @override
  _i5.Future<_i4.SchoolDepartmentModel> getSchoolInfo() => (super.noSuchMethod(
        Invocation.method(
          #getSchoolInfo,
          [],
        ),
        returnValue: _i5.Future<_i4.SchoolDepartmentModel>.value(
            _FakeSchoolDepartmentModel_4(
          this,
          Invocation.method(
            #getSchoolInfo,
            [],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i4.SchoolDepartmentModel>.value(
            _FakeSchoolDepartmentModel_4(
          this,
          Invocation.method(
            #getSchoolInfo,
            [],
          ),
        )),
      ) as _i5.Future<_i4.SchoolDepartmentModel>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i8.NetworkInfo {
  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [ProfileLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileLocalDataSource extends _i1.Mock
    implements _i2.ProfileLocalDataSource {
  @override
  _i5.Future<void> updateUserCredentials(
          _i2.UserCredentialModel? userCredentialModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserCredentials,
          [userCredentialModel],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.UserCredentialModel> getUserCredential() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserCredential,
          [],
        ),
        returnValue: _i5.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #getUserCredential,
            [],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i2.UserCredentialModel>.value(
            _FakeUserCredentialModel_0(
          this,
          Invocation.method(
            #getUserCredential,
            [],
          ),
        )),
      ) as _i5.Future<_i2.UserCredentialModel>);

  @override
  _i5.Future<void> updateUserCredntial(
          {required _i2.UserCredentialModel?
              updatedUserCredntialInformation}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserCredntial,
          [],
          {#updatedUserCredntialInformation: updatedUserCredntialInformation},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> saveProfileData(dynamic updatedProfile) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveProfileData,
          [updatedProfile],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.UserProfileModel?> getCachedUserProfile() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedUserProfile,
          [],
        ),
        returnValue: _i5.Future<_i3.UserProfileModel?>.value(),
        returnValueForMissingStub: _i5.Future<_i3.UserProfileModel?>.value(),
      ) as _i5.Future<_i3.UserProfileModel?>);

  @override
  _i5.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [HiveBoxes].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveBoxes extends _i1.Mock implements _i9.HiveBoxes {
  @override
  _i5.Future<void> initializeHive() => (super.noSuchMethod(
        Invocation.method(
          #initializeHive,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearHiveBoxes() => (super.noSuchMethod(
        Invocation.method(
          #clearHiveBoxes,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
